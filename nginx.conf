# 引用 https://hackmd.io/@to-hutohu/isucon2022
# vim s1/etc/nginx/nginx.conf
# Logging Settingsに下記を追加
worker_processes  auto;  # コア数と同じ数まで増やすと良いかも

# nginx worker の設定
worker_rlimit_nofile  4096; 
events {
  worker_connections  1024;  # 128より大きくするなら、 max connection 数を増やす必要あり。さらに大きくするなら worker_rlimit_nofile も大きくする（file descriptor数の制限を緩める)
  multi_accept on;         # 複数acceptを有効化する
  # accept_mutex_delay 100ms;
  use epoll; # 待受の利用メソッドを指定（基本は自動指定されてるはず）
}

log_format ltsv "time:$time_local"
                "\thost:$remote_addr"
                "\tforwardedfor:$http_x_forwarded_for"
                "\treq:$request"
                "\tstatus:$status"
                "\tmethod:$request_method"
                "\turi:$request_uri"
                "\tsize:$body_bytes_sent"
                "\treferer:$http_referer"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\tcache:$upstream_http_x_cache"
                "\truntime:$upstream_http_x_runtime"
                "\tapptime:$upstream_response_time"
                "\tvhost:$host"; 
                
access_log  /var/log/nginx/access.log  ltsv;

# httpディレクティブの中
  # 基本設定
  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;
  types_hash_max_size 2048;
  server_tokens    off;
  open_file_cache max=100 inactive=20s; # file descriptor のキャッシュ。入れた方が良い。

  # proxy buffer の設定。白金動物園が設定してた。
  proxy_buffers 100 32k;
  proxy_buffer_size 8k;

  # mime.type の設定
  include       /etc/nginx/mime.types;  

  # Keepalive 設定
  # ベンチマークとの相性次第ではkeepalive off;にしたほうがいい
  # keepalive off;
  
  keepalive_requests 1000000;
  keepalive_timeout 600s;

  http2_max_requests 1000000;
  http2_recv_timeout 600s;

  # Proxy cache 設定。使いどころがあれば。1mでkey8,000個。1gまでcache。
  # proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=zone1:1m max_size=1g inactive=1h;
  # proxy_temp_path  /var/cache/nginx/tmp;
  
  # 上記を設定した場合、ディレクトリ作成とパーミッション付与が必要かも
  # sudo mkdir -p /var/cache/nginx/cache
  # sudo mkdir -p /var/cache/nginx/tmp
  # sudo chown nginx /var/cache/nginx/cache
  # sudo chown nginx /var/cache/nginx/tmp
  
  # オリジンから来るCache-Controlを無視する必要があるなら。。。
  #proxy_ignore_headers Cache-Control;


# 静的ファイル serverディレクティブの中
      # static file の配信用の root
    root /home/isucon/webapp/public/;

    location ~ .*\.(htm|html|css|js|jpg|png|gif|ico) {
      expires 24h;
      add_header Cache-Control public;

      open_file_cache max=100;  # file descriptor などを cache

      gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
      gzip_types text/html text/css application/javascript application/json font/woff font/ttf image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
      gzip_disable "msie6";
      gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要
    }
    
    # デバッグ用エンドポイントのタイムアウト対策＆＆ログ除外
    location /debug {
	  send_timeout 600s;
	  proxy_read_timeout 600s;
	  proxy_send_timeout 600s;
	  proxy_connect_timeout 600s;
	  access_log off;
	  proxy_pass http://localhost:1323; # !!!ポート注意!!!
    }

# nginx-backend間でkeepaliveする
upstream app {
	server 127.0.0.1:3000;
	keepalive_requests 1000000;
	keepalive 128;
}
        proxy_http_version 1.1;  // http1.1する＝デフォルトでKeepAliveする
        proxy_set_header Connection ""; //nginxはデフォルトでcloseを入れてしまうので空にする
        proxy_pass http://app;